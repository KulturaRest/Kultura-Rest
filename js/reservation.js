// js/reservation.js

document.addEventListener("DOMContentLoaded", () => {
  // –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤—ñ–¥–∫—Ä–∏—Ç–æ —á–µ—Ä–µ–∑ file://
  if (window.location.protocol === "file:") {
    console.warn(
      "–î–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –∑–∞–ø–∏—Ç—ñ–≤ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∞–π—Ç —á–µ—Ä–µ–∑ HTTP-—Å–µ—Ä–≤–µ—Ä " +
      "(–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, python -m http.server)."
    );
  }

  // 1. –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≥—Ä—É–ø —Å—Ç–æ–ª—ñ–≤: maxGuests ‚Üí –º–∞—Å–∏–≤ —ó—Ö–Ω—ñ—Ö ID
  const tableGroups = [
    { maxGuests: 2, tables: [1, 2, 3] },
    { maxGuests: 4, tables: [4, 5, 6] },
    { maxGuests: 6, tables: [7, 8, 9] },
    { maxGuests: 8, tables: [10, 11] },
    { maxGuests: Infinity, tables: [12] }
  ];

  // 2. –í–∏–±—ñ—Ä –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —Å—Ç–æ–ª—É –∑ –≥—Ä—É–ø–∏
  function pickRandomTable(guestsCount) {
    const group = tableGroups.find(g => guestsCount <= g.maxGuests);
    if (!group) return null;
    const list = group.tables;
    return list[Math.floor(Math.random() * list.length)];
  }

  const form       = document.getElementById("reservation-form");
  const tableInput = document.getElementById("reservation-table-id");

  form.addEventListener("submit", async e => {
    e.preventDefault();

    // 3. –ó–±—ñ—Ä –ø–æ–ª—ñ–≤ (guestsStr ‚Äì —Ä—è–¥–æ–∫)
    const name        = form.name.value.trim();
    const phone       = form.phone.value.trim();
    const date        = form.reservation_date.value;
    const time        = form.reservation_time.value;
    const guestsStr   = form.reservation_guests.value;   // —Ä—è–¥–æ–∫, –Ω–∞–ø—Ä. "4"
    const guestsCount = parseInt(guestsStr, 10);        // –¥–ª—è –∞–ª–≥–æ—Ä–∏—Ç–º—É –≤–∏–±–æ—Ä—É
    const message     = form.message.value.trim();

    // 4. –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!name || !phone || !date || !time || !guestsStr || isNaN(guestsCount)) {
      return alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ.");
    }

    // 5. –í–∏–±—ñ—Ä —Å—Ç–æ–ª—É
    const tableIdNum = pickRandomTable(guestsCount);
    if (!tableIdNum) {
      return alert("–ù–µ–º–∞—î –≤—ñ–ª—å–Ω–æ–≥–æ —Å—Ç–æ–ª—É –¥–ª—è —Ü—ñ—î—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≥–æ—Å—Ç–µ–π.");
    }
    const tableIdStr = String(tableIdNum);               // –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞ —Ä—è–¥–æ–∫
    tableInput.value = tableIdStr;                       // –∑–∞–ø–æ–≤–Ω—é—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π —ñ–Ω–ø—É—Ç

    // 6. –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ (—É—Å—ñ –ø–æ–ª—è ‚Äì —Ä—è–¥–∫–∏)
    const formData = {
      name,
      phone,
      reservation_date: date,
      reservation_time: time,
      reservation_guests: guestsStr,
      table_id: tableIdStr,
      message
    };

    // 7. URL –≤–∞—à–æ—ó Lambda Function
    const apiUrl = "https://veii5a3nu7ywmveqyav3zytgwu0fbvrn.lambda-url.eu-north-1.on.aws";

    console.log("‚ñ∂Ô∏è –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –Ω–∞:", apiUrl, formData);

    // 8. POST-–∑–∞–ø–∏—Ç –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é CORS
    try {
      const response = await fetch(apiUrl, {
        method:  "POST",
        mode:    "cors",
        cache:   "no-cache",
        headers: { "Content-Type": "application/json" },
        body:    JSON.stringify(formData)
      });

      // 9. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
      if (!response.ok) {
        const errText = await response.text();
        console.error("‚ùå Lambda –≤—ñ–¥–ø–æ–≤—ñ–ª–∞:", response.status, errText);
        throw new Error(`HTTP ${response.status}`);
      }

      // 10. –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
      alert(`–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ! –í–∞—à —Å—Ç—ñ–ª ‚Ññ${tableIdStr}.`);
      form.reset();
    } catch (err) {
      console.error("üî• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ:", err);
      alert(
        `–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–æ—Ä–º—É: ${err.message}. ` +
        `–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ CORS-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å API.`
      );
    }
  });
});
